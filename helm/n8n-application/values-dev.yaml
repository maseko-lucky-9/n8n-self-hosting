# Default values for n8n-application
replicaCount: 1
namespace: n8n-development

image:
  repository: n8nio/n8n
  pullPolicy: IfNotPresent
  # ❌ CRITICAL: Should not use "latest"
  tag: "1.19.4"  # Use specific version

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # ❌ MEDIUM: Should create service account
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
  hosts:
    - host: n8n.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: n8n-tls
      hosts:
        - n8n.local

resources:
  limits:
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# n8n specific configuration
n8n:
  host: "0.0.0.0"
  port: 5678
  protocol: "https"
  
# Database configuration
database:
  type: "postgresdb"
  host: "postgresql.default.svc.cluster.local"
  port: 5432
  database: "n8n"
  username: "n8n"
  password: "changeme"  # ❌ CRITICAL: Should be in external secret

# Persistence
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 2Gi
