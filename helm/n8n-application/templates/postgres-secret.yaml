apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-secret
  namespace: {{ .Release.Namespace }}
  annotations:
    # NOTE: ensure your ClusterSecretStore / SecretStore named `vault-secret-store` exists
    # and is configured to talk to your Vault instance. This ExternalSecret fetches keys
    # from path `secret/data/n8n/postgres` and writes a Kubernetes Secret named
    # `postgres-secret` in the release namespace.
    managed-by: helm
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: vault-secret-store
    kind: ClusterSecretStore
  target:
    name: postgres-secret
    creationPolicy: Owner
  data:
    - secretKey: POSTGRES_USER
      remoteRef:
        key: secret/data/n8n/postgres
        property: POSTGRES_USER
    - secretKey: POSTGRES_PASSWORD
      remoteRef:
        key: secret/data/n8n/postgres
        property: POSTGRES_PASSWORD
    - secretKey: POSTGRES_DB
      remoteRef:
        key: secret/data/n8n/postgres
        property: POSTGRES_DB
    - secretKey: POSTGRES_NON_ROOT_USER
      remoteRef:
        key: secret/data/n8n/postgres
        property: POSTGRES_NON_ROOT_USER
    - secretKey: POSTGRES_NON_ROOT_PASSWORD
      remoteRef:
        key: secret/data/n8n/postgres
        property: POSTGRES_NON_ROOT_PASSWORD